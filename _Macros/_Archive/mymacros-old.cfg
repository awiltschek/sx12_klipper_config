[gcode_macro Calibrate_Z_OFFSET]
# Calibrate the Z-offset
gcode:
 G28
 PROBE_CALIBRATE

[gcode_macro Tramming_Assistant]
gcode:
     G28
     SCREWS_TILT_CALCULATE

[gcode_macro BED_LEVELING]
gcode:
     G28
     BED_SCREWS_ADJUST

[gcode_macro START_PRINT]
# Reference https://github.com/KevinOConnor/klipper/blob/master/docs/Config_Reference.md#gcode_macroA
# On how to override default parameters
#BED_TEMP: 60
#EXTRUDER_TEMP: 200
 
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(210)|int %}
    {% set BED_TEMP = params.BED|default(60)|int %}
# Heat up Bed
    #M140 S{BED}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    #M190 S{BED}
    #M109 S{EXTRUDER}
# Home the printer
	G28
    #Probe Everytime
	G29 
	#load saved mesh at print start instead of probe. Uncomment to use but comment out G29
	#BED_MESH_PROFILE LOAD=x1   					 
    BED_MESH_PROFILE LOAD = default
    # Use absolute coordinates
    G90
    # Move the nozzle near the bed
    G1 X0 Y0 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    G92 E0 ;Reset Extruder
    G1 X20 Y5 Z0.3 F5000.0			   
    G1 Z0.3 F1000 				    
    G1 X200 Y5 F1500.0 E15 			   
    G1 X200 Y5.3 Z0.3 F5000.0			    
    G1 X5.3  Y5.3 Z0.3 F1500.0 E30 			
    G1 Z3 F3000 				     
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative	distances for extrusion
    G92 E0

[gcode_macro END_PRINT]
gcode:
    {% set MACHINE_DEPTH = params.MACHINE_DEPTH|default(300)|int %}
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    ## Retract and raise Z
    #G1 Z0.2 E-2 F2400
    ## Wipe out
    #G1 X5 Y5 F3000
    ## Raise Z more
    #G1 Z10
    # Move nozzle away from print while retracting
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    # Absolute positionning
    G90
    # Present print
    G1 X0 Y{machine_depth}
    # Disable steppers
    M84

[pause_resume]
recover_velocity: 50.

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE


#[gcode_macro G34]
#gcode:
#     G28
#     Z_TILT_ADJUST		
